#!/usr/bin/env bash
#
# Copyright (C) 2016 Xenith Consulting Limited
# Author: Salim Badakhchani <sadakhc@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

# Switch on Debugging
set -x

# Define logfile
LOG="/root/install.log"

echo -e "########################################################################" > ${LOG}
echo -e "Installing System..." >> ${LOG}
echo -e "########################################################################\n" >> ${LOG}
echo -e $(date) >> ${LOG}
echo >> ${LOG}

# Execution statements logically grouped into functions.
function system_update {
    echo -e "# Updating system..." >> ${LOG}
    yum -y update > /dev/null 2>&1
}

install_deps () {
    
    echo -e "# Installing dependencies..." >> ${LOG}
    yum -y install httpd mariadb-server mariadb mlocate php php-mysql php-fpm patch rysnc htop dos2unix vsftpd

    echo -e "# Starting services..." >> ${LOG}
    systemctl start httpd.service
    systemctl enable httpd.service
    systemctl start mariadb.service
    systemctl enable mariadb.service
    systemctl enable vsftpd
    systemctl start vsftpd
   
    echo -e "# Creating dadatbases..." >> ${LOG}
    mysql -u root -Bse "CREATE DATABASE wordpress; CREATE USER wpadmin@localhost IDENTIFIED BY 'CHANGEME'; GRANT ALL PRIVILEGES ON wordpress.* TO wpadmin@localhost IDENTIFIED BY 'CHANGEME'; FLUSH PRIVILEGES; exit"

    echo -e "# Securing MySql..." >> ${LOG} 
    echo -e "\n\nCHANGEME\nCHANGEME\n\n\nn\n\n " | mysql_secure_installation 2>/dev/null

    systemctl restart mariadb.service
    systemctl restart httpd.service
}

install_wordpress () {
    
    cd ~
    wget http://wordpress.org/latest.tar.gz
    tar xzvf latest.tar.gz
    rsync -avP ~/wordpress/ /var/www/html/
    mkdir -p  /var/www/html/wp-content/uploads
    chown -R apache:apache /var/www/html/
    chown -R root:root /var/www/html/wp-admin

    echo -e "# Patching PHP..." >> ${LOG} 
    cp -p /etc/php.ini /etc/php.ini.orig
    cat > /tmp/php.ini.patch << 'EOF'
--- /etc/php.ini    2016-05-12 13:49:38.000000000 +0000
+++ /etc/php.ini    2016-06-21 12:10:20.975267701 +0000
@@ -797,7 +797,7 @@
 
 ; Maximum allowed size for uploaded files.
 ; http://php.net/upload-max-filesize
-upload_max_filesize = 2M
+upload_max_filesize = 48M
 
 ; Maximum number of files that can be uploaded via a single request
 max_file_uploads = 20

EOF
    (cd / && patch -p0) < /tmp/php.ini.patch
    rm -f /tmp/php.ini.patch

    echo -e "# Patching Wordpress..." >> ${LOG}        
    cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php
    dos2unix /var/www/html/wp-config.php
    cat > /tmp/wp-config.php.patch << 'EOF'
--- /var/www/html/wp-config.php	2015-12-16 09:58:26.000000000 +0000
+++ /var/www/html/wp-config.php	2016-07-03 23:17:07.898866778 +0000
@@ -20,13 +20,13 @@
 
 // ** MySQL settings - You can get this info from your web host ** //
 /** The name of the database for WordPress */
-define('DB_NAME', 'database_name_here');
+define('DB_NAME', 'wordpress');
 
 /** MySQL database username */
-define('DB_USER', 'username_here');
+define('DB_USER', 'wpadmin');
 
 /** MySQL database password */
-define('DB_PASSWORD', 'password_here');
+define('DB_PASSWORD', 'CHANGEME');
 
 /** MySQL hostname */
 define('DB_HOST', 'localhost');

EOF
    (cd / && patch -p0) < /tmp/wp-config.php.patch
    rm -f /tmp/wp-config.php.patch
cat <<EOF >> /var/www/html/wp-config.php

if(is_admin()) {
add_filter('filesystem_method', create_function('$a', 'return "direct";' ));
define( 'FS_CHMOD_DIR', 0751 );
}

define('FS_METHOD', 'ftpext');
define('FTP_BASE', '/var/www/html/wordpress/');
define('FTP_CONTENT_DIR', '/var/www/html/wordpress/wp-content/');
define('FTP_PLUGIN_DIR ', '/var/www/html/wordpress/wp-content/plugins/');
define('FTP_USER', 'wp-user');
define('FTP_PASS', '');
define('FTP_HOST', 'CHANGEME');

EOF
    chown -R apache:apache /var/www/html/
    chown -R root:root /var/www/html/wp-admin
    chown -R apache:wp-user /var/www/html/wordpress

    useradd wp-user
    usermod -s /sbin/nologin wp-user
}


patch_vsftpd () {

echo -e "# Patching vsftp..." >> ${LOG}
    cp -p /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.orig
    cat > /tmp/vsftp.patch << 'EOF'
--- /etc/vsftpd/vsftpd.conf.orig	2016-03-31 15:12:03.000000000 +0000
+++ /etc/vsftpd/vsftpd.conf	2016-07-27 12:36:58.980830479 +0000
@@ -9,7 +9,7 @@
 # capabilities.
 #
 # Allow anonymous FTP? (Beware - allowed by default if you comment this out).
-anonymous_enable=YES
+anonymous_enable=NO
 #
 # Uncomment this to allow local users to log in.
 # When SELinux is enforcing check for SE bool ftp_home_dir
@@ -79,8 +79,8 @@
 # predicted this attack and has always been safe, reporting the size of the
 # raw file.
 # ASCII mangling is a horrible feature of the protocol.
-#ascii_upload_enable=YES
-#ascii_download_enable=YES
+ascii_upload_enable=YES
+ascii_download_enable=YES
 #
 # You may fully customise the login banner string:
 #ftpd_banner=Welcome to blah FTP service.
@@ -97,7 +97,7 @@
 # (Warning! chroot'ing can be very dangerous. If using chroot, make sure that
 # the user does not have write access to the top level directory within the
 # chroot)
-#chroot_local_user=YES
+chroot_local_user=YES
 #chroot_list_enable=YES
 # (default follows)
 #chroot_list_file=/etc/vsftpd/chroot_list
EOF

(cd / && patch -p0) < /tmp/vsftpd.patch
rm -f /tmp/vsftpd.patch
}

post_install () {

    echo -e "# Running post install..." >> ${LOG}
    updatedb
    systemctl restart mariadb.service
    systemctl restart httpd.service
}

# Execute functions
install_deps
install_wordpress
patch_vsftpd
post_install
