#!/usr/bin/env bash
#
# Copyright (C) 2016 Xenith Consulting Limited
# Author: Salim Badakhchani <sal@redhat.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

# Switch on Debugging
set -x

# Define logfile
LOG="/root/install.log"

echo -e "########################################################################" >> $LOG
echo -e "Installing System..." >> $LOG
echo -e "########################################################################\n" >> $LOG
echo -e $(date) >> $LOG

# Non-interactive mode
export DEBIAN_FRONTEND=noninteractive

# Execution statements logicaly grouped into functions.
function system_update {
    echo -e "# Updating system..." >> $LOG
    apt-get update > /dev/null 2>&1
}

function install_deps {
    echo -e "# Install Apache..." >> LOG
    apt-get -y install apache2 > /dev/null 2>&1

    echo -e "# Installing PHP5 + libraries..." >> $LOG
    apt-get install -y php5 libapache2-mod-php5 php5-curl php5-mysql php5-gd php5-mcrypt php5-cli> /dev/null 2>&1

    echo -e "# Installing Imagemagick..." >> $LOG
    apt-get -y install imagemagick imagemagick-common > /dev/null 2>&1

    echo -e "# Installing graphicsmagick..." >> $LOG
    apt-get -y install graphicsmagick > /dev/null 2>&1

    echo -e "# Installing tools..." >> $LOG
    apt-get -y install build-essential software-properties-common iotop mytop iftop mc vim wget tmux debconf-utils git curl tree auditd> /dev/null 2>&1

    echo -e "# Installing MySQL..." >> $LOG
    debconf-set-selections <<< "mysql-server mysql-server/root_password password 1234"
    debconf-set-selections <<< "mysql-server mysql-server/root_password_again password 1234"
    apt-get -y install mysql-server > /dev/null 2>&1

    echo -e "# Install mail server..." >> $LOG
    hostnamectl set-hostname locahost
    debconf-set-selections <<< "postfix postfix/mailname string localhost"
    debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
    apt-get -y install mailutils > /dev/null 2>&1
    dpkg-reconfigure debconf -f noninteractive

    echo -e "# Installing libsqlite3-dev ruby1.9.1-dev..." >> $LOG
    apt-get -y install libsqlite3-dev ruby1.9.1-dev > /dev/null 2>&1

}

function install_catcher {
    echo -e "# Install Mailcatcher as a Ruby gem..." >> $LOG
    gem install mailcatcher > /dev/null 2>&1

    echo -e "# Adding mailcatcher.conf..." >> $LOG
    cat > /etc/init/mailcatcher.conf <<'EOF'
description "Mailcatcher"

start on runlevel [2345]
stop on runlevel [!2345]

respawn

exec /usr/bin/env mailcatcher --foreground --http-ip=0.0.0.0
EOF
    echo -e "# Adding mailcatcher as php5 module.conf..." >> $LOG
    echo "sendmail_path = /usr/bin/env catchmail -f test@local.dev" | sudo tee /etc/php5/mods-available/mailcatcher.ini
    php5enmod mailcatcher  > /dev/null 2>&1
}

function config_vhost {
    echo -e "# Change default vhost..." >> $LOG
    cat > /etc/apache2/sites-available/000-default.conf <<'EOF'
<VirtualHost *:80>
    ServerName localhost
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/shared/site
    SetEnv TYPO3_CONTEXT Development/Vagrant
    <Directory "/var/www/shared/site">
        Options Indexes FollowSymLinks
        AllowOverride All
        Order allow,deny
        Allow from all
        Require all granted
    </Directory>
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
EOF
}

function config_php {
    echo -e "# Adding php settings..." >> $LOG
    cat > /etc/php5/apache2/conf.d/30-pixelant.ini <<'EOF'
memory_limit = 384M
max_execution_time=240
upload_max_filesize=200M
post_max_size=400M

EnableSendfile Off

date.timezone=Europe/Stockholm

opcache.revalidate_freq=0
; Comment line opcache.validate_timestamps=0  when developing
;opcache.validate_timestamps=0
opcache.max_accelerated_files=7963
opcache.memory_consumption=192
opcache.interned_strings_buffer=16
opcache.fast_shutdown=1
EOF
}

apt-get clean > /dev/null 2>&1

function  config_locale {
	echo -e "# Adding some locales..." >> $LOG
	locale-gen en_AU.utf8 > /dev/null 2>&1
	locale-gen en_DK.utf8 > /dev/null 2>&1
	locale-gen en_GB.utf8 > /dev/null 2>&1
	locale-gen en_HK.utf8 > /dev/null 2>&1
	locale-gen en_IE.utf8 > /dev/null 2>&1
	locale-gen en_US.utf8 > /dev/null 2>&1
	locale-gen sv_SE.utf8 > /dev/null 2>&1
	locale-gen uk_UA.utf8 > /dev/null 2>&1
}

function config_mods {
    echo -e "# Enable mod rewrite" >> $LOG
    a2enmod rewrite > /dev/null 2>&1
    echo -e "# Enable mod expires" >> $LOG
    a2enmod expires > /dev/null 2>&1
}

function config_mysql {
    echo -e "# Adding mysql settings..." >> $LOG
    cat > /etc/mysql/conf.d/pixelant.cnf <<'EOF'
[mysqld]
key_buffer = 64M
sort_buffer = 1M
join_buffer = 12M
max_allowed_packet = 8M
max_heap_table_size = 320M
table_cache = 3096
thread_cache_size = 4
query_cache_limit = 512M
query_cache_size = 128M
tmp_table_size = 320M
innodb_buffer_pool_size = 1024M
innodb_flush_log_at_trx_commit = 0
max_allowed_packet=64M
skip-name-resolve=ON
#skip_networking=ON
bulk_insert_buffer_size=32M
EOF
}

function config_user {
    echo -e "# Creating admin user..." >> $LOG
    useradd admin -m -s /bin/bash -G www-data
    mkdir -p /var/www/shared/
    chown -R admin:www-data /var/www/shared/
}

function install_t3kit {
    echo -e "# Install Composer..." >> $LOG
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

    echo -e "# Download t3kit..." >> $LOG
    mkdir -p /var/www/shared/
    cd /var/www/shared/
    git clone https://github.com/sbadakhc/t3kit_vagrant.git
    chown -R admin:www-data /var/www/shared/
}

function cleanup {
    apt-get clean > /dev/null 2>&1
}

function send_notification {
    echo -e "# Installtion completed. Sending notification mail" >> $LOG
    aureport | mail -s "New Host Notification" sbadakhc@gmail.com
}

# Execute functions 
system_update
install_deps
install_catcher
config_vhost
config_php
config_locale
config_mods
config_mysql
config_user
install_t3kit
cleanup
send_notification

# Reboot the system
reboot 
